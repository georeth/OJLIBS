#!/usr/bin/env perl
use v5.18;
use strict;
use warnings;
use Term::ANSIColor;
no warnings 'experimental::smartmatch';

# replace `$inc_dir' with your include directory containing ojlibs
my $inc_dir = glob("~") . "/usr/include";
# replace `$author_name' with your name and email
my $author_name = 'Georeth Chow <georeth2010@gmail.com>';
my $inc_pattern = qr(ojlibs/.*);
my $guard_pattern = qr(OJLIBS_.*_H_);
my @included_files; # use files instead of guards, reduce #include number

say STDERR color("yellow"), "inc_dir = $inc_dir", color("reset");

sub parse_file {
    our @included_files;
    my $fh = shift @_;
    while (my $line = <$fh>) {
        # author line
        $line =~ s/OJLIBS_CODER_NAME/$author_name/;
        # bracket include
        if ($line =~ /^\s*#\s*include\s*<([^>]*)>\s*$/) {
            my $file = $1;
            next if ($file ~~ @included_files); # already included
            push @included_files, $file;
            if ($file =~ $inc_pattern) {        # in ojlibs -> replace
                my $inc_fh;
                die "cannot open $file" unless open $inc_fh, "$inc_dir/$file";
                say STDERR color("yellow"), "Including $file", color("reset");
                parse_file($inc_fh);
                close $inc_fh;
                next;
            }
        }
        if ($line =~ /^\s*#\s*include\s*"([^"]*)"/) {
            say STDERR color("red"), "quote include is not allowed", color("reset");
        }
        # guard (remove)
        if ($line =~ /^\s*#\s*(ifndef|define|endif).*$guard_pattern/) {
            # say STDERR color("yellow"), "found guard : $1", color("reset");
            # say STDERR color("yellow"), "current guards : @guards", color("reset");
            # return if $1 ~~ @guards;
            # push @guards, $1;
            next;
        }

        # TO_BE_REMOVED
        next if $line =~ /TO_BE_REMOVED/;
        # remove c++ style comment
        # (may remove `https://` in comment if we remove part of line)
        $line =~ s{^\s*//.*$}{};
        # $line =~ s{//.*$}{};
        # empty line
        next if $line =~ /^\s*$/;

        print $line;
    }
}
parse_file("ARGV");

# ojlibs_cpp : a preprocesser tool to combine inclusions
#
# Usage:
#         ojlibs_cpp solution.cpp
#
#     ojlibs will recursively replace all `ojlibs' header inclusion.
#     so the output can directly submit to online judging platform.
#
# Have fun

# vim:et:ts=4:sts=4:sw=4
